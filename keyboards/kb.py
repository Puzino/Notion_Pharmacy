from aiogram.types import KeyboardButton, ReplyKeyboardMarkup, InlineKeyboardButton, InlineKeyboardMarkup
from aiogram.utils.keyboard import InlineKeyboardBuilder

from notion.models import Category, Item


def main_kb():
    kb_list = [[KeyboardButton(text="üìñ –í—Å–µ –º–µ–¥–∏–∫–∞–º–µ–Ω—Ç—ã"), KeyboardButton(text="üíº –ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –∫–∞—Ç–µ–≥–æ—Ä–∏–∏")],
               [KeyboardButton(text="‚úèÔ∏è –î–æ–±–∞–≤–∏—Ç—å –≤ –∞–ø—Ç–µ—á–∫—É"), KeyboardButton(text="üßæ –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –º–µ–¥–∏–∫–∞–º–µ–Ω—Ç—ã")]]
    keyboard = ReplyKeyboardMarkup(keyboard=kb_list, resize_keyboard=True, one_time_keyboard=True)
    return keyboard


def items_inline_kb(items: list[Item]):
    builder = InlineKeyboardBuilder()
    # –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫–∏ –≤–æ–ø—Ä–æ—Å–æ–≤
    for item in items:
        text = f'‚úÖ{item.title} - {item.categories_text()}. {item.quantity}' \
            if item.quantity else f'‚ùå{item.title} - {item.categories_text()}'
        builder.row(
            InlineKeyboardButton(
                text=text,
                callback_data=f'item_{item._id}'
            )
        )
    builder.adjust(1)
    return builder.as_markup()


def category_inline_kb(categories: list[Category]):
    builder = InlineKeyboardBuilder()
    # –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫–∏ –≤–æ–ø—Ä–æ—Å–æ–≤
    for category in categories:
        builder.row(
            InlineKeyboardButton(
                text=category.name,
                callback_data=f'category_{category.name}'
            )
        )
    # –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫—É "–ù–∞ –≥–ª–∞–≤–Ω—É—é"
    # builder.row(
    #     InlineKeyboardButton(
    #         text='–ù–∞ –≥–ª–∞–≤–Ω—É—é',
    #         callback_data='back_home'
    #     )
    # )
    # –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º —Ä–∞–∑–º–µ—Ä –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã
    builder.adjust(1)
    return builder.as_markup()


def item_crud_inline_kb(item: Item):
    inline_kb_list = [
        [InlineKeyboardButton(text="‚úèÔ∏è –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å", callback_data=f'change_item_{item._id}'),
         InlineKeyboardButton(text="üóë –£–¥–∞–ª–∏—Ç—å",
                              callback_data=f'delete_item_{item._id}')]]
    return InlineKeyboardMarkup(inline_keyboard=inline_kb_list)


def del_buttons():
    kb_list = [[KeyboardButton(text="‚úÖ –î–∞"), KeyboardButton(text="‚ùå –ù–µ—Ç")]]
    keyboard = ReplyKeyboardMarkup(keyboard=kb_list, resize_keyboard=True, one_time_keyboard=True)
    return keyboard


def item_edit_inline_kb(item: Item):
    inline_kb_list = [
        [InlineKeyboardButton(text="‚úèÔ∏è –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ", callback_data=f'change_count_item_{item._id}')]]
    # InlineKeyboardButton(text="‚úèÔ∏è –ù–∞–∑–≤–∞–Ω–∏–µ", callback_data=f'change_item_count_{item._id}')],
    # [InlineKeyboardButton(text="‚úèÔ∏è –û–ø–∏—Å–∞–Ω–∏–µ", callback_data=f'change_item_count_{item._id}'),
    #  InlineKeyboardButton(text="‚úèÔ∏è –¢–∏–ø –ª–µ–∫–∞—Ä—Å—Ç–≤–∞", callback_data=f'change_item_count_{item._id}')],
    # [InlineKeyboardButton(text="‚úèÔ∏è –°—Ä–æ–∫ –≥–æ–¥–Ω–æ—Å—Ç–∏", callback_data=f'change_item_count_{item._id}'),
    #  InlineKeyboardButton(text="‚úèÔ∏è –ö–∞—Ç–µ–≥–æ—Ä–∏—é", callback_data=f'change_item_count_{item._id}')]
    return InlineKeyboardMarkup(inline_keyboard=inline_kb_list)


def edit_count_inline_kb(categories: list[Category]):
    builder = InlineKeyboardBuilder()
    # –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫–∏ –≤–æ–ø—Ä–æ—Å–æ–≤
    for category in categories:
        builder.row(
            InlineKeyboardButton(
                text=category.name,
                callback_data=f'category_{category.name}'
            )
        )
    # –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫—É "–ù–∞ –≥–ª–∞–≤–Ω—É—é"
    # builder.row(
    #     InlineKeyboardButton(
    #         text='–ù–∞ –≥–ª–∞–≤–Ω—É—é',
    #         callback_data='back_home'
    #     )
    # )
    # –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º —Ä–∞–∑–º–µ—Ä –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã
    builder.adjust(1)
    return builder.as_markup()
